#+TITLE:     Introducción a R

#+SETUPFILE: config.org
#+OPTIONS: H:3
#+PROPERTY: results output graphics
#+PROPERTY: exports both


* R es software libre
** ¿Qué es =R=?
*** ¿Qué es =R=?						    
**** ¿Qué es [[http://procomun.wordpress.com/2011/02/23/que-es-r/][R]]?			    :B_block:
     :PROPERTIES:
     :BEAMER_env: block
     :END:
Es un lenguaje de programación principalmente orientado al
análisis estadístico y visualización de información cuantitativa y
cualitativa y publicado como software libre con licencia GNU-GPL.
#+BEGIN_CENTER
 [[http://www.R-project.org]] 
#+END_CENTER

*** Para instalar =R=

- Windows: http://cran.es.r-project.org/bin/windows/base/
- Mac: http://cran.es.r-project.org/bin/macosx/
- Linux: http://cran.es.r-project.org/bin/linux/

*** Interfaces para R

- En mi opinión, la mejor interfaz para R es [[http://ess.r-project.org/][ESS]] con [[http://www.gnu.org/software/emacs/][Emacs]]. 
- Para los que prefieren una interfaz gráfica es recomendable [[http://www.rstudio.com/ide/][RStudio]]:
  - Instalador: http://www.rstudio.com/ide/download/desktop
  - Introducción: http://www.rstudio.com/ide/docs/using/source

** R está muy bien documentado

*** Fuentes de Información
- [[http://cran.r-project.org/manuals.html][Manuales Oficiales]]

  - [[http://cran.r-project.org/doc/manuals/r-release/R-intro.html][Introduction to R]]

  - [[http://cran.r-project.org/doc/manuals/r-release/R-data.html][R Data Import/Export]]

  - [[http://cran.r-project.org/doc/manuals/r-release/R-admin.html][R Installation and Administration]]

  - [[http://cran.r-project.org/doc/manuals/r-release/R-exts.html][Writing R Extensions]]

  - [[http://cran.r-project.org/doc/manuals/r-release/R-lang.html][R language definition]]

  - [[http://cran.r-project.org/doc/manuals/r-release/R-ints.html][R Internals]]

- [[http://cran.r-project.org/other-docs.html][Manuales externos]]

*** Fuentes de Información
- [[http://www.r-project.org/mail.html][Listas de correo]] (sin olvidar respetar [[http://www.r-project.org/posting-guide.html][estos consejos]])
  - Generales: R-announce, R-help, R-devel
  - Special Interest Group (SIG) mailing lists
- [[http://www.r-bloggers.com][R-bloggers]]
- [[http://stackoverflow.com/questions/tagged/r][stackoverflow]]

** R es un proyecto colaborativo
*** R es un proyecto colaborativo
- Una de las grandes riquezas de R es la cantidad de paquetes (más de 6000 actualmente) que amplían sus funcionalidades.  
- La lista completa está en http://cran.es.r-project.org/web/packages/.
- Las CRAN Task Views agrupan por temáticas: [[http://cran.r-project.org/web/views/]]

*** CRAN Task Views

**** Big Data
- [[http://cran.es.r-project.org/web/views/HighPerformanceComputing.html][High-Performance and Parallel Computing with R]]
- [[http://cran.es.r-project.org/web/views/MachineLearning.html][Machine Learning & Statistical Learning]]
- [[http://cran.es.r-project.org/web/views/WebTechnologies.html][Web Technologies and Services]]
- ...

*** Más de 6000 paquetes disponibles
- Algunos vienen instalados y se cargan al empezar:
#+begin_src R 
  sessionInfo()
#+end_src
*** Más de 6000 paquetes disponibles
- Otros vienen instalados pero hay que cargarlos:
#+begin_src R 
  library(lattice)
  packageVersion('lattice')
#+end_src
#+begin_src R
  packageDescription('lattice')
#+end_src

*** Más de 6000 paquetes disponibles
- Otros hay que instalarlos y después cargarlos:
#+begin_src R :eval no
  install.packages('data.table')
  library('data.table')
  packageDescription('data.table')
#+end_src

* Objetos en R

*** Objetos en R

- Existen varios objetos en R:
  - Vectores
  - Listas
  - Funciones
  - ...
- A partir de estos objetos se definen varias clases:
  - =matrix=
  - =data.frame=
  - =factor=
  - =Date=, =POSIXct=
  - ...

** Vectores

*** Primeros pasos
#+begin_src R 
x <- 1:5
x
#+end_src
#+begin_src R
length(x)
#+end_src
#+begin_src R
class(x)
#+end_src


*** Generar vectores con =seq=
#+begin_src R 
x1 <- seq(1, 100, by=2)
x1
#+end_src

#+begin_src R
seq(1, 100, length=10)
#+end_src


*** Unir vectores con =c=
#+begin_src R
x <- c(1, 2, 3)
x
#+end_src

#+begin_src R 
x <- seq(1, 100, length=10)
y <- seq(2, 100, length=50)
z <- c(x, y)
z
#+end_src


*** Operaciones sencillas con vectores
#+begin_src R 
  x <- 1:5
  x + 1
#+end_src

#+begin_src R
  x^2
#+end_src

#+begin_src R
  y <- 1:10
  x + y
#+end_src

#+begin_src R
  x * y
#+end_src

#+begin_src R
  x^2 + y^3
#+end_src



** Matrices
*** Construir una matriz
#+begin_src R 
  z <- 1:12
  M  <-  matrix(z, nrow=3)
  M
#+end_src

#+begin_src R
  class(M)
#+end_src

#+begin_src R
  dim(M)
#+end_src

#+begin_src R
  summary(M)
#+end_src

*** Matrices a partir de vectores: =rbind= y =cbind=
#+begin_src R 
z <- y <- x <- 1:10

M <- cbind(x, y, z)
M
#+end_src

#+begin_src R
M <- rbind(x, y, z)
M
#+end_src



** Listas
*** Para crear una lista usamos la función =list=
#+begin_src R 
lista <- list(a=c(1,3,5),
              b=c('l', 'p', 'r', 's'),
              c=3)
lista
#+end_src

#+begin_src R
class(lista)
#+end_src

#+begin_src R
length(lista)
#+end_src



** Data.frame
*** Para crear un =data.frame=...
#+begin_src R 
  df <- data.frame(x = 1:5,
                   y = rnorm(10),
                   z = 0)
  df
#+end_src

#+begin_src R
  length(df)
#+end_src

#+begin_src R
  dim(df)
#+end_src

** Funciones

*** Para definir una función usamos la función =function=
#+begin_src R 
myFun <- function(x, y) x + y
myFun
#+end_src

#+begin_src R
  class(myFun)
#+end_src


#+begin_src R
  myFun(3, 4)
#+end_src

*** Podemos construir a partir de funciones
#+begin_src R 
foo  <-  function(x, ...){
  mx <- mean(x, ...)
  medx <- median(x, ...)
  sdx <- sd(x, ...)
  c(mx, medx, sdx)
  }
#+end_src
O en forma resumida:
#+begin_src R 
foo <- function(x, ...){c(mean(x, ...), median(x, ...), sd(x, ...))}
#+end_src


*** Y ahora usamos la función con vectores
#+begin_src R 
foo(1:10)
#+end_src

#+begin_src R
foo(rnorm(1e5))
#+end_src

* Indexado
** Vectores
*** Indexado numérico

#+begin_src R 
  x <- seq(1, 100, 2)
  x
#+end_src

#+begin_src R
  x[1:5]
#+end_src

#+begin_src R
  x[10:5]
#+end_src

*** Indexado con condiciones lógicas

#+begin_src R 
  x == 37
#+end_src

#+begin_src R
  x[x == 37]
#+end_src

#+begin_src R
  x[x != 9]
#+end_src

#+begin_src R
  x[x > 20]
#+end_src
     

*** Indexado con condiciones múltiples

#+begin_src R 
z <- seq(-10, 10, by = .5)
z
#+end_src

#+begin_src R
z[z < -5 | z > 5]
#+end_src

#+begin_src R
cond <- (z >= 0 & z <= 5)
cond
#+end_src

#+begin_src R
z[cond]
#+end_src

** Matrices
*** Indexado de matrices
#+begin_src R
M[1:2, ]
#+end_src

#+begin_src R
M[1:2, 2:3]
#+end_src

#+begin_src R
M[1, c(1, 4)]
#+end_src

*** Indexado de matrices
#+begin_src R
M[-1,]
#+end_src

#+begin_src R
M[-c(1, 2),]
#+end_src


** Listas
*** Podemos acceder a los elementos...
- Por su nombre
#+begin_src R
lista$a
#+end_src

- o por su índice
#+begin_src R 
  lista[1]
#+end_src

#+begin_src R
  lista[[1]]
#+end_src

** Data Frame
*** Podemos acceder a los elementos
- Por su nombre (como una lista)
#+begin_src R 
df$x
#+end_src

- Por su índice (como una matriz)
#+begin_src R 
df[1,]
#+end_src

#+begin_src R
df[,1]
#+end_src

* Bucles

** Matrices
*** La función =apply=
#+begin_src R 
apply(M, 1, sum)
#+end_src

#+begin_src R
rowSums(M)
#+end_src

#+begin_src R
apply(M, 2, mean)
#+end_src

#+begin_src R
colMeans(M)
#+end_src

** Listas / =data.frame=
*** =lapply= y =sapply=
#+begin_src R
lista <- list(x = 1:10,
              y = seq(0, 10, 2),
              z = rnorm(30))
lapply(lista, sum)
#+end_src

#+begin_src R
sapply(lista, sum)
#+end_src

* Datos con R
** Lectura de datos
*** =setwd=, =getwd=, =dir=
#+begin_src R :exports code
  getwd()
  old <- setwd("~/github/r-intro-eoi")
  dir()
#+end_src

#+begin_src R
  dir(pattern='.R')
#+end_src

#+begin_src R
  dir('data')
#+end_src

*** Lectura de datos con =read.table=
#+begin_src R
  
  dats <- read.table('data/aranjuez.csv', sep=',', header=TRUE)
  head(dats)
#+end_src
*** Lectura de datos con =read.table=
#+begin_src R
aranjuez <- read.csv('data/aranjuez.csv')
head(aranjuez)
#+end_src

#+begin_src R
  class(aranjuez)
#+end_src

#+begin_src R
  names(aranjuez)
#+end_src

** Indexado

*** Indexado con =[]=
- Filas
#+begin_src R
aranjuez[1:5,]
#+end_src
- Filas y Columnas
#+begin_src R
aranjuez[10:14, 1:5]
#+end_src

*** Indexado con =[]=
- Condición basada en los datos
#+begin_src R
idx <- with(aranjuez, Radiation > 20 & TempAvg < 10) 

head(aranjuez[idx, ])
#+end_src

*** =subset=
#+begin_src R
subset(aranjuez,
       subset = (Radiation > 20 & TempAvg < 10),
       select = c(Radiation, TempAvg,
           TempMax, TempMin))
#+end_src

** Datos agregados
*** =aggregate=
#+begin_src R
aranjuez$rainy <- aranjuez$Rain > 0

aggregate(Radiation ~ rainy, data = aranjuez,
          FUN = mean)
#+end_src
*** Variable categórica con =cut=
#+begin_src R
aranjuez$tempClass <- cut(aranjuez$TempAvg, 5)

aggregate(Radiation ~ tempClass, data = aranjuez,
          FUN = mean)
#+end_src

#+begin_src R
aggregate(Radiation ~ tempClass + rainy,
          data = aranjuez, FUN = mean)
#+end_src

*** Fechas
- =as.Date=
#+begin_src R
  aranjuez$date <- as.Date(aranjuez[,1],
                      format='%Y-%m-%d')
#+end_src
- Funciones para extraer mes y año
#+begin_src R
  Year <- function(x)as.numeric(format(x, "%Y"))
  Month <- function(x)as.numeric(format(x, "%m"))

#+end_src
- Añado columnas en =data.frame=
#+begin_src R
aranjuez$month <- Month(aranjuez$date)
aranjuez$year <- Year(aranjuez$date)
aranjuez$quarter <- quarters(aranjuez$date)
#+end_src
*** Agregamos con fechas
#+begin_src R
aggregate(Radiation ~ year, data = aranjuez,
          FUN=mean)
#+end_src

#+begin_src R
aggregate(Radiation ~ month + year,
          data = aranjuez, FUN=mean)
#+end_src

*** Agregamos varias variables con fechas

#+begin_src R
aggregate(cbind(Radiation, TempAvg) ~ month + year,
          data = aranjuez, FUN = mean)
#+end_src
** Regresión lineal

*** =lm=: Regresión simple
#+begin_src R
radTemp <- lm(Radiation ~ TempAvg, data = aranjuez)
summary(radTemp)
#+end_src


*** =lm=: Regresión multiple
#+begin_src R
radTempHumid <- lm(Radiation ~ TempAvg * HumidAvg,
                   data = aranjuez)
summary(radTempHumid)
#+end_src

*** =lm=: Regresión multiple
#+begin_src R
radTempRain <- lm(Radiation ~ TempAvg * rainy,
                  data = aranjuez)
summary(radTempRain)
#+end_src

* Visualización de datos 
** Catálogo

*** Lattice

- Documentación: [[http://lmdvr.r-forge.r-project.org/figures/figures.html][Código y Figuras del libro]]

#+begin_src R 
  library(lattice)
#+end_src

*** =xyplot=

#+begin_src R  :eval no :file figs/xyplot.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplot.pdf]]

*** Paneles

#+begin_src R :eval no :file figs/xyplotYear.pdf
  xyplot(Radiation ~ TempAvg|factor(year),
         data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotYear.pdf]]

*** Grupos

#+begin_src R :eval no :file figs/xyplotQuarter.pdf
  xyplot(Radiation ~ TempAvg, groups=quarter,
         data=aranjuez, auto.key=list(space='right'))
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotQuarter.pdf]]

*** Matriz de gráficos de dispersión

#+begin_src R :eval no :file figs/splom.png
  splom(aranjuez[,c("TempAvg", "HumidAvg", "WindAvg",
                    "Rain", "Radiation", "ET")],
        pscale=0, alpha=0.6, cex=0.3, pch=19)
#+end_src

*** 
#+RESULTS:
[[file:figs/splom.png]]

*** Box-and-Whiskers

#+begin_src R :eval no :file figs/bwplot.pdf
  bwplot(Radiation ~ month, data=aranjuez,
         horizontal=FALSE, pch='|')
#+end_src

*** 
#+RESULTS:
[[file:figs/bwplot.pdf]]

*** Histogramas

#+begin_src R :eval no :file figs/histogram.pdf
  histogram(~ Radiation|factor(year), data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/histogram.pdf]]

*** Gráficos de densidad

#+begin_src R :eval no :file figs/density.pdf
densityplot(~ Radiation, groups=quarter,
            data=aranjuez,
            auto.key=list(space='right'))
#+end_src

*** 
#+RESULTS:
[[file:figs/density.pdf]]

    

** Ajustes
*** Añadimos regresión lineal

#+begin_src R :eval no :file figs/xyplotPRG.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez,
         type=c('p', 'r'), grid = TRUE,
         lwd=2, col.line='black')
  
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotPRG.pdf]]

    

*** Añadimos ajuste local

#+begin_src R :eval no :file figs/xyplotSmooth.pdf
  xyplot(Radiation ~ TempAvg, data=aranjuez,
         type=c('p', 'smooth'), grid = TRUE,
         lwd=2, col.line='black')
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotSmooth.pdf]]


*** Colores y tamaños
#+begin_src R :eval no :file figs/xyplotColors.pdf
  xyplot(Radiation ~ TempAvg,
         type=c('p', 'r'),
         cex=2, col='blue',
         alpha=.5, pch=19,
         lwd=3, col.line='black',
         data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/xyplotColors.pdf]]

*** Colores con grupos: =par.settings= y =simpleTheme=
- Primero definimos el tema con =simpleTheme=
#+begin_src R 
  myTheme <- simpleTheme(col=c('red', 'blue',
                          'green', 'yellow'),
                          pch=19, alpha=.6)
#+end_src

*** Colores con grupos: =par.settings= y =simpleTheme=
- Aplicamos el resultado en =par.settings=
#+begin_src R :eval no :file figs/myTheme.pdf
  xyplot(Radiation ~ TempAvg,
         groups=quarter,
         par.settings=myTheme,
         auto.key=list(space='right'),
         data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/myTheme.pdf]]

*** Colores: brewer.pal

#+begin_src R 
library(RColorBrewer)

myPal <- brewer.pal(n = 4, 'Dark2')

myTheme <- simpleTheme(col = myPal,
                       pch=19, alpha=.6)
#+end_src

**** ColorBrewer: [[http://colorbrewer2.org/]]

*** Asignamos paleta con =par.settings=
#+begin_src R :eval no :file figs/brewer.pdf
xyplot(Radiation ~ TempAvg,
       groups=quarter,
       par.settings=myTheme,
       auto.key=list(space='right'),
       data=aranjuez)
#+end_src

*** 
#+RESULTS:
[[file:figs/brewer.pdf]]


